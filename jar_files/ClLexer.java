// Generated from ../antlr_files/ClLexer.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class ClLexer extends ClLexerBase {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		MAIN=1, IF=2, ELIF=3, ELSE=4, WHILE=5, FOR=6, CLASS=7, STRUCT=8, SELF=9, 
		RETURN=10, PLUS=11, MINUS=12, BY=13, DIV=14, MOD=15, EQUAL=16, COLON=17, 
		SEMI=18, COMMA=19, LBRACE=20, RBRACE=21, LPAR=22, RPAR=23, POINT=24, INT=25, 
		FLOAT=26, STRING=27, BOOL=28, TRUE=29, FALSE=30, EQEQUAL=31, NOTEQUAL=32, 
		MUTABLE=33, INMUTABLE=34, NONDIGIT=35, DIGIT=36;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"MAIN", "IF", "ELIF", "ELSE", "WHILE", "FOR", "CLASS", "STRUCT", "SELF", 
			"RETURN", "PLUS", "MINUS", "BY", "DIV", "MOD", "EQUAL", "COLON", "SEMI", 
			"COMMA", "LBRACE", "RBRACE", "LPAR", "RPAR", "POINT", "INT", "FLOAT", 
			"STRING", "BOOL", "TRUE", "FALSE", "EQEQUAL", "NOTEQUAL", "MUTABLE", 
			"INMUTABLE", "NONDIGIT", "DIGIT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'main'", "'if'", "'elif'", "'else'", "'while'", "'for'", "'class'", 
			"'struct'", "'->'", "'<-'", "'+'", "'-'", "'*'", "'/'", "'%'", "'='", 
			"':'", "';'", "','", "'{'", "'}'", "'('", "')'", "'.'", "'int'", "'float'", 
			"'str'", "'bool'", "'true'", "'false'", "'=='", "'!='", "'mutable'", 
			"'inmutable'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "MAIN", "IF", "ELIF", "ELSE", "WHILE", "FOR", "CLASS", "STRUCT", 
			"SELF", "RETURN", "PLUS", "MINUS", "BY", "DIV", "MOD", "EQUAL", "COLON", 
			"SEMI", "COMMA", "LBRACE", "RBRACE", "LPAR", "RPAR", "POINT", "INT", 
			"FLOAT", "STRING", "BOOL", "TRUE", "FALSE", "EQEQUAL", "NOTEQUAL", "MUTABLE", 
			"INMUTABLE", "NONDIGIT", "DIGIT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ClLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "ClLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000$\u00ce\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0001\u0000\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001"+
		"\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001"+
		"\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001"+
		"\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001"+
		"\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001"+
		"\n\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001"+
		"\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001"+
		"\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001"+
		"\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001"+
		"\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001"+
		"\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001\u0019\u0001"+
		"\u001a\u0001\u001a\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001"+
		"\u001b\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001c\u0001"+
		"\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001"+
		"\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001f\u0001"+
		"\u001f\u0001\u001f\u0001 \u0001 \u0001 \u0001 \u0001 \u0001 \u0001 \u0001"+
		" \u0001!\u0001!\u0001!\u0001!\u0001!\u0001!\u0001!\u0001!\u0001!\u0001"+
		"!\u0001\"\u0001\"\u0001#\u0001#\u0000\u0000$\u0001\u0001\u0003\u0002\u0005"+
		"\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n"+
		"\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b"+
		"7\u001c9\u001d;\u001e=\u001f? A!C\"E#G$\u0001\u0000\u0002\u0003\u0000"+
		"AZ__az\u0001\u000009\u00cd\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003"+
		"\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007"+
		"\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001"+
		"\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000"+
		"\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000"+
		"\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000"+
		"\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000"+
		"\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000"+
		"\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000"+
		"\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000"+
		")\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001"+
		"\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000"+
		"\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u0000"+
		"7\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001"+
		"\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000"+
		"\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000"+
		"E\u0001\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0001I\u0001"+
		"\u0000\u0000\u0000\u0003N\u0001\u0000\u0000\u0000\u0005Q\u0001\u0000\u0000"+
		"\u0000\u0007V\u0001\u0000\u0000\u0000\t[\u0001\u0000\u0000\u0000\u000b"+
		"a\u0001\u0000\u0000\u0000\re\u0001\u0000\u0000\u0000\u000fk\u0001\u0000"+
		"\u0000\u0000\u0011r\u0001\u0000\u0000\u0000\u0013u\u0001\u0000\u0000\u0000"+
		"\u0015x\u0001\u0000\u0000\u0000\u0017z\u0001\u0000\u0000\u0000\u0019|"+
		"\u0001\u0000\u0000\u0000\u001b~\u0001\u0000\u0000\u0000\u001d\u0080\u0001"+
		"\u0000\u0000\u0000\u001f\u0082\u0001\u0000\u0000\u0000!\u0084\u0001\u0000"+
		"\u0000\u0000#\u0086\u0001\u0000\u0000\u0000%\u0088\u0001\u0000\u0000\u0000"+
		"\'\u008a\u0001\u0000\u0000\u0000)\u008c\u0001\u0000\u0000\u0000+\u008e"+
		"\u0001\u0000\u0000\u0000-\u0090\u0001\u0000\u0000\u0000/\u0092\u0001\u0000"+
		"\u0000\u00001\u0094\u0001\u0000\u0000\u00003\u0098\u0001\u0000\u0000\u0000"+
		"5\u009e\u0001\u0000\u0000\u00007\u00a2\u0001\u0000\u0000\u00009\u00a7"+
		"\u0001\u0000\u0000\u0000;\u00ac\u0001\u0000\u0000\u0000=\u00b2\u0001\u0000"+
		"\u0000\u0000?\u00b5\u0001\u0000\u0000\u0000A\u00b8\u0001\u0000\u0000\u0000"+
		"C\u00c0\u0001\u0000\u0000\u0000E\u00ca\u0001\u0000\u0000\u0000G\u00cc"+
		"\u0001\u0000\u0000\u0000IJ\u0005m\u0000\u0000JK\u0005a\u0000\u0000KL\u0005"+
		"i\u0000\u0000LM\u0005n\u0000\u0000M\u0002\u0001\u0000\u0000\u0000NO\u0005"+
		"i\u0000\u0000OP\u0005f\u0000\u0000P\u0004\u0001\u0000\u0000\u0000QR\u0005"+
		"e\u0000\u0000RS\u0005l\u0000\u0000ST\u0005i\u0000\u0000TU\u0005f\u0000"+
		"\u0000U\u0006\u0001\u0000\u0000\u0000VW\u0005e\u0000\u0000WX\u0005l\u0000"+
		"\u0000XY\u0005s\u0000\u0000YZ\u0005e\u0000\u0000Z\b\u0001\u0000\u0000"+
		"\u0000[\\\u0005w\u0000\u0000\\]\u0005h\u0000\u0000]^\u0005i\u0000\u0000"+
		"^_\u0005l\u0000\u0000_`\u0005e\u0000\u0000`\n\u0001\u0000\u0000\u0000"+
		"ab\u0005f\u0000\u0000bc\u0005o\u0000\u0000cd\u0005r\u0000\u0000d\f\u0001"+
		"\u0000\u0000\u0000ef\u0005c\u0000\u0000fg\u0005l\u0000\u0000gh\u0005a"+
		"\u0000\u0000hi\u0005s\u0000\u0000ij\u0005s\u0000\u0000j\u000e\u0001\u0000"+
		"\u0000\u0000kl\u0005s\u0000\u0000lm\u0005t\u0000\u0000mn\u0005r\u0000"+
		"\u0000no\u0005u\u0000\u0000op\u0005c\u0000\u0000pq\u0005t\u0000\u0000"+
		"q\u0010\u0001\u0000\u0000\u0000rs\u0005-\u0000\u0000st\u0005>\u0000\u0000"+
		"t\u0012\u0001\u0000\u0000\u0000uv\u0005<\u0000\u0000vw\u0005-\u0000\u0000"+
		"w\u0014\u0001\u0000\u0000\u0000xy\u0005+\u0000\u0000y\u0016\u0001\u0000"+
		"\u0000\u0000z{\u0005-\u0000\u0000{\u0018\u0001\u0000\u0000\u0000|}\u0005"+
		"*\u0000\u0000}\u001a\u0001\u0000\u0000\u0000~\u007f\u0005/\u0000\u0000"+
		"\u007f\u001c\u0001\u0000\u0000\u0000\u0080\u0081\u0005%\u0000\u0000\u0081"+
		"\u001e\u0001\u0000\u0000\u0000\u0082\u0083\u0005=\u0000\u0000\u0083 \u0001"+
		"\u0000\u0000\u0000\u0084\u0085\u0005:\u0000\u0000\u0085\"\u0001\u0000"+
		"\u0000\u0000\u0086\u0087\u0005;\u0000\u0000\u0087$\u0001\u0000\u0000\u0000"+
		"\u0088\u0089\u0005,\u0000\u0000\u0089&\u0001\u0000\u0000\u0000\u008a\u008b"+
		"\u0005{\u0000\u0000\u008b(\u0001\u0000\u0000\u0000\u008c\u008d\u0005}"+
		"\u0000\u0000\u008d*\u0001\u0000\u0000\u0000\u008e\u008f\u0005(\u0000\u0000"+
		"\u008f,\u0001\u0000\u0000\u0000\u0090\u0091\u0005)\u0000\u0000\u0091."+
		"\u0001\u0000\u0000\u0000\u0092\u0093\u0005.\u0000\u0000\u00930\u0001\u0000"+
		"\u0000\u0000\u0094\u0095\u0005i\u0000\u0000\u0095\u0096\u0005n\u0000\u0000"+
		"\u0096\u0097\u0005t\u0000\u0000\u00972\u0001\u0000\u0000\u0000\u0098\u0099"+
		"\u0005f\u0000\u0000\u0099\u009a\u0005l\u0000\u0000\u009a\u009b\u0005o"+
		"\u0000\u0000\u009b\u009c\u0005a\u0000\u0000\u009c\u009d\u0005t\u0000\u0000"+
		"\u009d4\u0001\u0000\u0000\u0000\u009e\u009f\u0005s\u0000\u0000\u009f\u00a0"+
		"\u0005t\u0000\u0000\u00a0\u00a1\u0005r\u0000\u0000\u00a16\u0001\u0000"+
		"\u0000\u0000\u00a2\u00a3\u0005b\u0000\u0000\u00a3\u00a4\u0005o\u0000\u0000"+
		"\u00a4\u00a5\u0005o\u0000\u0000\u00a5\u00a6\u0005l\u0000\u0000\u00a68"+
		"\u0001\u0000\u0000\u0000\u00a7\u00a8\u0005t\u0000\u0000\u00a8\u00a9\u0005"+
		"r\u0000\u0000\u00a9\u00aa\u0005u\u0000\u0000\u00aa\u00ab\u0005e\u0000"+
		"\u0000\u00ab:\u0001\u0000\u0000\u0000\u00ac\u00ad\u0005f\u0000\u0000\u00ad"+
		"\u00ae\u0005a\u0000\u0000\u00ae\u00af\u0005l\u0000\u0000\u00af\u00b0\u0005"+
		"s\u0000\u0000\u00b0\u00b1\u0005e\u0000\u0000\u00b1<\u0001\u0000\u0000"+
		"\u0000\u00b2\u00b3\u0005=\u0000\u0000\u00b3\u00b4\u0005=\u0000\u0000\u00b4"+
		">\u0001\u0000\u0000\u0000\u00b5\u00b6\u0005!\u0000\u0000\u00b6\u00b7\u0005"+
		"=\u0000\u0000\u00b7@\u0001\u0000\u0000\u0000\u00b8\u00b9\u0005m\u0000"+
		"\u0000\u00b9\u00ba\u0005u\u0000\u0000\u00ba\u00bb\u0005t\u0000\u0000\u00bb"+
		"\u00bc\u0005a\u0000\u0000\u00bc\u00bd\u0005b\u0000\u0000\u00bd\u00be\u0005"+
		"l\u0000\u0000\u00be\u00bf\u0005e\u0000\u0000\u00bfB\u0001\u0000\u0000"+
		"\u0000\u00c0\u00c1\u0005i\u0000\u0000\u00c1\u00c2\u0005n\u0000\u0000\u00c2"+
		"\u00c3\u0005m\u0000\u0000\u00c3\u00c4\u0005u\u0000\u0000\u00c4\u00c5\u0005"+
		"t\u0000\u0000\u00c5\u00c6\u0005a\u0000\u0000\u00c6\u00c7\u0005b\u0000"+
		"\u0000\u00c7\u00c8\u0005l\u0000\u0000\u00c8\u00c9\u0005e\u0000\u0000\u00c9"+
		"D\u0001\u0000\u0000\u0000\u00ca\u00cb\u0007\u0000\u0000\u0000\u00cbF\u0001"+
		"\u0000\u0000\u0000\u00cc\u00cd\u0007\u0001\u0000\u0000\u00cdH\u0001\u0000"+
		"\u0000\u0000\u0001\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}